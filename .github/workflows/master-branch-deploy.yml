name: Branch Deploy
on:
  push:
    branch:
      - 'master'
    paths-ignore: # 下列文件的变更不触发部署
      - .editorconfig
      - .eslintrc
      - .gitignore
      - .prettierrc
      - README.md
      - LICENSE

jobs:
  master-branch-deploy:
    runs-on: ubuntu-latest
    steps:
      - run: node -v

      - run: npm -v

      - run: yarn -v

      - name: Checkout
        uses: actions/checkout@master

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Cache yarn cache
        uses: actions/cache@v2
        id: cache-yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Cache node_modules
        id: cache-node-modules
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.os }}-${{ matrix.node-version }}-nodemodules-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.node-version }}-nodemodules-

      - name: Install
        run: yarn
        if: |
          steps.cache-yarn-cache.outputs.cache-hit != 'true' ||
          steps.cache-node-modules.outputs.cache-hit != 'true'

      - name: Build
        run: npm run build

      - name: Release
        run: tar -zcvf release.tgz .nuxt static utils config.js nuxt.config.js package.json yarn.lock pm2.config.json

      - name: Copy file
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST }}
          port: ${{ secrets.PORT }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          source: 'release.tgz'
          target: '/webapp/diary'

      - name: Deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          port: ${{ secrets.PORT }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          script: |
            cd /webapp/diary
            tar zxvf release.tgz
            yarn install --production
            pm2 reload pm2.config.json
